# Pour la plupart des projets, ce fichier de workflow ne n√©cessitera pas de modifications ;
# il suffit de le committer dans votre d√©p√¥t.
#
# Vous pourriez souhaiter modifier ce fichier pour remplacer l'ensemble des langages analys√©s,
# ou pour fournir des requ√™tes ou une logique de construction personnalis√©es.
#
# ******** NOTE ********
# Nous avons tent√© de d√©tecter les langages utilis√©s dans votre d√©p√¥t. Veuillez v√©rifier
# la matrice `language` d√©finie ci-dessous pour confirmer que vous avez l'ensemble correct
# de langages CodeQL pris en charge.
#
name: "CodeQL Avanc√©"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '37 20 * * 3' # Ce workflow est planifi√© pour s'ex√©cuter chaque mercredi √† 20h37

jobs:
  analyze:
    name: Analyse (${{ matrix.language }})
    # La taille du runner impacte le temps d'analyse CodeQL. Pour en savoir plus, voir :
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com uniquement)
    # Envisagez d'utiliser des runners plus puissants ou des machines avec plus de ressources pour am√©liorer les temps d'analyse.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      # requis pour tous les workflows
      security-events: write

      # requis pour r√©cup√©rer des packs CodeQL internes ou priv√©s
      packages: read

      # requis uniquement pour les workflows dans des d√©p√¥ts priv√©s
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none
        # CodeQL prend en charge les mots-cl√©s de valeurs suivants pour 'language' : 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Utilisez `c-cpp` pour analyser du code √©crit en C, C++ ou les deux.
        # Utilisez 'java-kotlin' pour analyser du code √©crit en Java, Kotlin ou les deux.
        # Utilisez 'javascript-typescript' pour analyser du code √©crit en JavaScript, TypeScript ou les deux.
        # Pour en savoir plus sur la modification des langages analys√©s ou la personnalisation du mode de build pour votre analyse,
        # consultez https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # Si vous analysez un langage compil√©, vous pouvez modifier le 'build-mode' pour ce langage afin de personnaliser la fa√ßon dont
        # votre code est analys√©, voir https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
      - name: R√©cup√©rer le d√©p√¥t
        uses: actions/checkout@v4

      # Initialise les outils CodeQL pour l'analyse.
      - name: Initialiser CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          # Si vous souhaitez sp√©cifier des requ√™tes personnalis√©es, vous pouvez le faire ici ou dans un fichier de configuration.
          # Par d√©faut, les requ√™tes list√©es ici remplaceront celles sp√©cifi√©es dans un fichier de configuration.
          # Pr√©fixez la liste ici avec "+" pour utiliser ces requ√™tes et celles du fichier de configuration.

          # Pour plus de d√©tails sur les packs de requ√™tes CodeQL, consultez : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # Si l'√©tape d'analyse √©choue pour l'un des langages que vous analysez avec
      # "Nous n'avons pas pu automatiquement construire votre code", modifiez la matrice ci-dessus
      # pour d√©finir le mode de build sur "manual" pour ce langage. Ensuite, modifiez cette √©tape
      # pour construire votre code.
      # ‚ÑπÔ∏è Programmes en ligne de commande √† ex√©cuter via le shell de l'OS.
      # üìö Voir https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
      - if: matrix.build-mode == 'manual'
        shell: bash
        run: |
          echo 'Si vous utilisez un mode de build "manual" pour un ou plusieurs des' \
            'langages que vous analysez, remplacez cela par les commandes pour construire' \
            'votre code, par exemple :'
          echo '  make bootstrap'
          echo '  make release'
          exit 1

      - name: Effectuer l'analyse CodeQL
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
